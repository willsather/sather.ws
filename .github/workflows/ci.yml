name: ci

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - name: Build
        id: build
        run: |
          pnpm run build
          echo "::notice title=🛠️ Build::Complete"

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - name: Build
        id: build
        run: pnpm run build

      - name: Lint
        id: lint
        run: |
          pnpm run lint
          echo "::notice title=🧼️ Lint::Complete"


  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - name: Build
        run: pnpm run build

      - name: Unit Test
        run: |
          pnpm run test
          echo "::notice title=📝 Unit Test::Complete"

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Integration Test
        run: pnpm run test:e2e:ci

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5

  preview:
    needs: [ build, lint, test ]
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: ${{ steps.vercel.outputs.preview_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Build to Vercel
        id: vercel
        run: |
          url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          echo "::notice title=📬 Preview Deploy::Complete"
          echo "preview_url=$url" >> $GITHUB_OUTPUT


  deploy:
    runs-on: ubuntu-latest
    needs: [ build, test, preview ]
    environment:
      name: production
      url: ${{ steps.vercel.outputs.production_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Draft new release
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('./.github/workflows/scripts/create-release.js')
            await script({github, context, core})

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Production Build to Vercel
        id: vercel
        run: |
          url="$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})"
          echo "::notice title=🚀 Production Deploy::Complete"
          echo "production_url=$url" >> $GITHUB_OUTPUT

